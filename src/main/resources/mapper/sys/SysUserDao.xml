<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.dj.modules.sys.dao.SysUserDao">
	<select id="queryObject" resultType="io.dj.modules.sys.entity.SysUserEntity">
		select * from sys_user where id = #{value}
	</select>
	
	<select id="queryList" resultType="io.dj.modules.sys.entity.SysUserEntity">
		select u.*, d.name AS deptName from sys_user u
		LEFT JOIN sys_dept d ON d.id = u.dept_id
		<where>
			<if test="name != null and name.trim() != ''">
				and u.name like concat('%',#{name},'%')
			</if>
			<if test="dapId != null and dapId.trim() != ''">
				and u.dap_id = #{dapId}
			</if>
		</where>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by u.${sidx} ${order}
			</when>
			<otherwise>
				order by u.id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
            limit #{limit} offset #{offset}
		</if>
	</select>
	
	<select id="queryTotal" resultType="int">
		select count(*) from sys_user
		<where>
			<if test="name != null and name.trim() != ''">
				and name like concat('%',#{name},'%') 
			</if>
		</where>
	</select>
	
	<!-- 查询用户的所有权限 -->
	<select id="queryAllPerms" resultType="string">
		select m.perms from sys_user_role ur 
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id 
			LEFT JOIN sys_menu m on rm.menu_id = m.menu_id 
		where ur.user_id = #{userId}
	</select>
	
	<!-- 查询用户的所有菜单ID --> 
	<select id="queryAllMenuId" resultType="long">
		select distinct rm.menu_id from sys_user_role ur 
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id 
		where ur.user_id = #{userId}
	</select>
	
	<select id="queryByUserName" resultType="io.dj.modules.sys.entity.SysUserEntity">
		select * from sys_user where name = #{name}
	</select>

    <select id="queryByUserLoginName" resultType="io.dj.modules.sys.entity.SysUserEntity">
		select * from sys_user where login_name = #{loginName}
	</select>

	<insert id="save" parameterType="io.dj.modules.sys.entity.SysUserEntity" useGeneratedKeys="true" keyProperty="id">
		insert into sys_user
		(
			name,
			password,
			email,
			mobile, 
			status,
			dept_id,
			create_time,
			create_by,
			hold,
			login_name,
			no,
			dap_id
		)
		values
		(
			#{name},
			#{password},
			#{email},
			#{mobile}, 
			#{status},
			#{deptId},
			#{createTime},
			#{createBy},
			#{hold},
			#{loginName},
			#{no},
			#{dapId}
		)
	</insert>
	 
	<update id="update" parameterType="io.dj.modules.sys.entity.SysUserEntity">
		update sys_user
		<set> 
			<if test="name != null">name = #{name}, </if>
			<if test="password != null">password = #{password}, </if>
			<if test="email != null">email = #{email}, </if>
			<if test="mobile != null">mobile = #{mobile}, </if>
			<if test="status != null">status = #{status}, </if>
			<if test="deptId != null">dept_id = #{deptId}, </if>
			<if test="hold != null">hold = #{hold}, </if>
			<if test="no != null">no = #{no}, </if>
			<if test="updateBy != null">update_by = #{updateBy}, </if>
			<if test="updateTime != null">update_time = #{updateTime}, </if>
			<if test="dapId != null">dap_id = #{dapId}, </if>
			<if test="roles != null">roles = #{roles, jdbcType=ARRAY, typeHandler=io.dj.common.utils.ArrayTypeHandler} </if>
		</set>
		where id = #{id}
	</update>
	
	<update id="updatePassword" parameterType="map">
		update sys_user set password = #{newPassword} 
			where id = #{id} and password = #{password}
	</update>
	
	<delete id="delete">
        update sys_user SET status = '1' where id = #{id}
	</delete>

</mapper>